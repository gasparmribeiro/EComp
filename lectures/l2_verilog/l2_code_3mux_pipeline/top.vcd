$date
	Tue Sep 24 16:11:43 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module top_tb $end
$var wire 1 ! data_out_valid $end
$var wire 32 " data_out [31:0] $end
$var reg 1 # clk $end
$var reg 8 $ data_in [7:0] $end
$var reg 1 % data_in_valid $end
$var reg 32 & data_out_ref [31:0] $end
$var reg 1 ' rst $end
$var integer 32 ( i [31:0] $end
$scope module uut $end
$var wire 1 # clk $end
$var wire 8 ) data_in [7:0] $end
$var wire 1 % data_in_valid $end
$var wire 32 * data_out [31:0] $end
$var wire 1 ! data_out_valid $end
$var wire 1 ' rst $end
$var wire 1 + reg_en $end
$var wire 32 , reg_data_outB [31:0] $end
$var wire 32 - reg_data_outA [31:0] $end
$var wire 32 . reg_data_out [31:0] $end
$var wire 32 / reg_data_inB [31:0] $end
$var wire 32 0 reg_data_inA [31:0] $end
$var wire 32 1 reg_data_in [31:0] $end
$var wire 2 2 count [1:0] $end
$var wire 1 3 cnt_rst $end
$var wire 1 4 cnt_en $end
$scope module Areg $end
$var wire 1 # clk $end
$var wire 32 5 data_in [31:0] $end
$var wire 1 + en $end
$var reg 32 6 data_out [31:0] $end
$upscope $end
$scope module Breg $end
$var wire 1 # clk $end
$var wire 32 7 data_in [31:0] $end
$var wire 1 + en $end
$var reg 32 8 data_out [31:0] $end
$upscope $end
$scope module cnt $end
$var wire 1 # clk $end
$var wire 1 3 rst $end
$var wire 1 4 en $end
$var reg 2 9 data_out [1:0] $end
$upscope $end
$scope module controler $end
$var wire 1 # clk $end
$var wire 2 : cnt_data [1:0] $end
$var wire 1 4 cnt_en $end
$var wire 1 3 cnt_rst $end
$var wire 1 % data_in_valid $end
$var wire 1 + reg_en $end
$var wire 1 ' rst $end
$var reg 1 ; state $end
$var reg 1 < state_nxt $end
$upscope $end
$scope module preg $end
$var wire 1 # clk $end
$var wire 32 = data_in [31:0] $end
$var wire 1 + en $end
$var reg 32 > data_out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx >
bx =
0<
0;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
04
03
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
x+
bx *
bx )
bx (
1'
bx &
0%
bx $
1#
bx "
0!
$end
#5000
0#
#10000
1#
#15000
0#
#20000
1#
#25000
0#
#30000
1#
#35000
0#
#40000
1#
#45000
0#
#50000
1#
#50100
1+
1<
b10000 &
1!
13
1%
b100 0
b100 5
b100 /
b100 7
b10 $
b10 )
b0 (
0'
#55000
0#
#60000
14
b0 2
b0 9
b0 :
b10000 1
b10000 =
b100 -
b100 6
b100 ,
b100 8
1;
1#
#60100
b1010001 &
b1001 0
b1001 5
b1001 /
b1001 7
b11 $
b11 )
b1 (
1!
13
1%
#65000
0#
#70000
b1001 ,
b1001 8
b1010001 1
b1010001 =
b1001 -
b1001 6
b10000 "
b10000 *
b10000 .
b10000 >
1#
#70100
b100000000 &
b10000 0
b10000 5
b10000 /
b10000 7
b100 $
b100 )
b10 (
1!
13
1%
#75000
0#
#80000
b1010001 "
b1010001 *
b1010001 .
b1010001 >
b10000 -
b10000 6
b100000000 1
b100000000 =
b10000 ,
b10000 8
1#
#80100
b1001110001 &
b11001 0
b11001 5
b11001 /
b11001 7
b101 $
b101 )
b11 (
1!
13
1%
#85000
0#
#90000
b11001 ,
b11001 8
b1001110001 1
b1001110001 =
b11001 -
b11001 6
b100000000 "
b100000000 *
b100000000 .
b100000000 >
1#
#90100
b10100010000 &
b100100 0
b100100 5
b100100 /
b100100 7
b110 $
b110 )
b100 (
1!
13
1%
#95000
0#
#100000
b1001110001 "
b1001110001 *
b1001110001 .
b1001110001 >
b100100 -
b100100 6
b10100010000 1
b10100010000 =
b100100 ,
b100100 8
1#
#100100
b100101100001 &
b110001 0
b110001 5
b110001 /
b110001 7
b111 $
b111 )
b101 (
1!
13
1%
#105000
0#
#110000
b110001 ,
b110001 8
b100101100001 1
b100101100001 =
b110001 -
b110001 6
b10100010000 "
b10100010000 *
b10100010000 .
b10100010000 >
1#
#110100
b1000000000000 &
b1000000 0
b1000000 5
b1000000 /
b1000000 7
b1000 $
b1000 )
b110 (
1!
13
1%
#115000
0#
#120000
b100101100001 "
b100101100001 *
b100101100001 .
b100101100001 >
b1000000 -
b1000000 6
b1000000000000 1
b1000000000000 =
b1000000 ,
b1000000 8
1#
#120100
b1100110100001 &
b1010001 0
b1010001 5
b1010001 /
b1010001 7
b1001 $
b1001 )
b111 (
1!
13
1%
#125000
0#
#130000
b1010001 ,
b1010001 8
b1100110100001 1
b1100110100001 =
b1010001 -
b1010001 6
b1000000000000 "
b1000000000000 *
b1000000000000 .
b1000000000000 >
1#
#130100
b10011100010000 &
b1100100 0
b1100100 5
b1100100 /
b1100100 7
b1010 $
b1010 )
b1000 (
1!
13
1%
#135000
0#
#140000
b1100110100001 "
b1100110100001 *
b1100110100001 .
b1100110100001 >
b1100100 -
b1100100 6
b10011100010000 1
b10011100010000 =
b1100100 ,
b1100100 8
1#
#140100
b11100100110001 &
b1111001 0
b1111001 5
b1111001 /
b1111001 7
b1011 $
b1011 )
b1001 (
1!
13
1%
#145000
0#
#150000
b1111001 ,
b1111001 8
b11100100110001 1
b11100100110001 =
b1111001 -
b1111001 6
b10011100010000 "
b10011100010000 *
b10011100010000 .
b10011100010000 >
1#
#150100
b1010 (
0!
03
0%
